echo "Starting environment loading…"
START_TIME_MS=$(perl -MTime::HiRes=time -e 'printf "%.0f\n", time * 1000')

# hide warnings from direnv
# see https://github.com/direnv/direnv/issues/419#issuecomment-442005962
# see: https://direnv.net/man/direnv.toml.1.html#codewarntimeoutcode
export DIRENV_WARN_TIMEOUT=876000h # 100 years in hours
export DO_NOT_TRACK=1

# if using nixos, run `use flake`
if has nix; then
	use flake
else
	# fnm
	export FNM_PATH="$HOME/Library/Application Support/fnm"

	# Check if fnm is installed, install if not
	if ! command -v fnm &> /dev/null || [ -d "$FNM_PATH" ]; then
		echo "fnm is not installed. Installing fnm…"
		curl -fsSL https://fnm.vercel.app/install | bash -s -- --skip-shell
	else
		echo "fnm is already installed."
	fi

	# ensure fnm is in the path
	export PATH="$FNM_PATH:$PATH"

	# load fnm
	eval "`fnm env`"

	# install node version from .nvmrc
	fnm install

	# update to latest corepack
	yes | npm update --global corepack npm

	# enable pnpm in corepack
	yes | corepack enable pnpm

	# install package manager with corepack (from package.json#packageManager)
	yes | corepack install
fi

# install dependencies
pnpm install

pnpm_version=$(pnpm --version)
echo -e "\nEnvironment is ready.\nUsing pnpm version: $pnpm_version\n"

END_TIME_MS=$(perl -MTime::HiRes=time -e 'printf "%.0f\n", time * 1000')
ELAPSED_TIME=$(bc <<< "scale=3; ($END_TIME_MS - $START_TIME_MS) / 1000")
echo -e "direnv environment setup took $ELAPSED_TIME s.\n"
